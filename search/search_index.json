{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Dot 5G Dot 5G is an open source 5G core network. Use it to operate your own private mobile network. Warning This is a work in progress. The project is not yet ready for production use. Get started here","title":"Home"},{"location":"#dot-5g","text":"Dot 5G is an open source 5G core network. Use it to operate your own private mobile network. Warning This is a work in progress. The project is not yet ready for production use. Get started here","title":"Dot 5G"},{"location":"tutorials/getting_started/","text":"Getting Started In this tutorial we will deploy dot-5g on a single machine using Juju. We will also deploy a radio simulator that will be used to test the 5G network. This tutorial assumes you are running Ubuntu 22.04 LTS. It should work on Operating Systems, but you may need to install some dependencies differently. Install Dependencies First open a terminal and install Juju , MicroK8s and Kubectl : snap install microk8s --classic snap install kubectl --classic snap install juju --classic Then enable the dns and storage MicroK8s plugins: microk8s.enable dns storage Boostrap a Juju controller Next, bootstrap a Juju controller: juju bootstrap microk8s localhost Create a model for dot-5g: juju add-model dot-5g","title":"Getting Started"},{"location":"tutorials/getting_started/#getting-started","text":"In this tutorial we will deploy dot-5g on a single machine using Juju. We will also deploy a radio simulator that will be used to test the 5G network. This tutorial assumes you are running Ubuntu 22.04 LTS. It should work on Operating Systems, but you may need to install some dependencies differently.","title":"Getting Started"},{"location":"tutorials/getting_started/#install-dependencies","text":"First open a terminal and install Juju , MicroK8s and Kubectl : snap install microk8s --classic snap install kubectl --classic snap install juju --classic Then enable the dns and storage MicroK8s plugins: microk8s.enable dns storage","title":"Install Dependencies"},{"location":"tutorials/getting_started/#boostrap-a-juju-controller","text":"Next, bootstrap a Juju controller: juju bootstrap microk8s localhost Create a model for dot-5g: juju add-model dot-5g","title":"Boostrap a Juju controller"},{"location":"tutorials/installing_dot_5g/","text":"Installing Dot 5G Install the necessary 5G components: juju deploy tls-certificates-operator juju deploy dot5g-amf --trust juju deploy dot5g-smf --trust juju deploy dot5g-upf --trust juju deploy dot5g-ui --trust Add the following relations: juju relate dot5g-amf tls-certificates-operator juju relate dot5g-smf tls-certificates-operator juju relate dot5g-upf tls-certificates-operator juju relate dot5g-smf dot5g-upf Validate the deployment is successfull: juju status All services should be in Active-Idle state. Success The 5G network is now deployed. You can access the UI at https://<ip-address>:3000 .","title":"Installing Dot 5G"},{"location":"tutorials/installing_dot_5g/#installing-dot-5g","text":"Install the necessary 5G components: juju deploy tls-certificates-operator juju deploy dot5g-amf --trust juju deploy dot5g-smf --trust juju deploy dot5g-upf --trust juju deploy dot5g-ui --trust Add the following relations: juju relate dot5g-amf tls-certificates-operator juju relate dot5g-smf tls-certificates-operator juju relate dot5g-upf tls-certificates-operator juju relate dot5g-smf dot5g-upf Validate the deployment is successfull: juju status All services should be in Active-Idle state. Success The 5G network is now deployed. You can access the UI at https://<ip-address>:3000 .","title":"Installing Dot 5G"}]}